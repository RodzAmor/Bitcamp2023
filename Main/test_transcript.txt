Very good. How are you doing, guys? So my name is Nelson and I'll be teaching, OK, a one three one.
You should have heard from me from the emails that I have sent a let's just talk about some logistics about the class.
If at any point you have any questions, don't hesitate to ask. Raise your hand and then we'll address the question.
So are you ready? Send the website.
If for some reason you're still in the waitlist and you need the information to access the website, there's some sections that are password protected.
OK, so you will need the following credential.
CMC one three one. And then this is the password that you will need and that's in case that you're in the waitlist.
Otherwise you should be able to get this information already.
Now, if the syllabus can be seen in that page, you guys are not going to take you through the syllabus, read that at home, read twice.
What I will do is that I will emphasize the important parts.
And as the semester unfolds, then I will focus on different components, like, for example, academic integrity, something that I take seriously.
I recall lectures, OK, and you will be able to find those lectures online.
So if you go to the class website, you go to the schedule section, you will see first the previous that I provide in class.
If there are class examples that I will discuss, I will post then the day before so you can download them.
I have that and I'll tell you how you can import them later.
OK, if I develop an example during class that I think is important, I will uploaded to Piazza.
Remember, Piazzi is the mechanism that we use to communicate. OK.
If there is an example that you feel I should post that you would like to have let me know and I'll post that.
So don't be shy, ask.
Now, in order to find the videos, you will go here where he says, various corresponding to lectures, life can be found in everything else.
By the way, I don't suppose these this when I teach because it's difficult for me for you to hear me.
Um, so I don't use them so long as the only thing I use it for is the videos.
The rest is through the websites and Piazzi and everything that I have posted.
OK, so the videos will be available immediately after class.
Just wait a little bit. Um and that will help you.
So if you get sick for some reason, you know, could be covid related or not, you don't have to worry.
Stay home, you can watch the videos, you will be as successful as if you were here.
The only component in case that you get sick will be the exam or a quiz.
And I'll work with you somehow, some sort of makeup. So no need to freak out.
OK, likewise, if, God forbid, you have an accident, did the exam.
Don't worry, I'll work with you, OK? Because you already have a lot of stress.
We don't want to increase the amount of stress so you can actually do the whole class OK online except for the days that their exams.
And that's absolutely fine with me. You're not you are not required OK by my me to to be here.
OK, so usually what happens is that today the room could be like this, but then maybe next week we have a third less of students.
But then they show up only for exams, it's fine as long as you're learning and so long as you're making my work harder, knock yourself out, OK?
So that's absolutely fine. That's how we run it when everything was online.
The only difficult part is exams. And I prefer that we are now in person because exams are easier for everyone when we are in person.
But anyway, take care of you now. So you guys, I want you to be successful if everybody here gets and everybody gets any.
That's not a problem. OK. So I'm not here to, you know, to play games like, oh, I'm not going to pass this many students.
No, and usually my classes people get you know, my students get a bunch of A's and B's.
I tell you, I have a curfew. Usually my classes are ninety, eighty seven and .
So hopefully I'll share that with you so that it releases the stress that you may have
because this could be your first class in college and you could be concerned about,
my God, are going to pass. So if you do what I ask you to do, you'll be fine, but you have to work hard.
Yes, you do that I cannot deny. OK, but if you do your part, you should be fine.
OK, um, one of the reasons I think many people don't succeed is because of the course load.
So this class takes time. So if you're doing  credits, OK, including this class, I think that's too much.
OK, so make sure that the course load give you the time that you need for the class.
If you have any questions about that, let me know. We can talk about that. OK, I pulled the project immediately.
Start the project. Do not delay if you have any kind of problems, guys like for example, if you get sick,
if you're having some personal situation that gets in the way of your performance in the class, email me.
OK, you don't have to give me all the details, will let me know ASAP as soon as possible.
Sometimes the students wait until the end of the semester. OK, and there's nothing much there's nothing I can do by the end of the semester.
OK, so if you have a health condition, if you suffer from inside a depression, whatever,
get in touch with me if something is affecting your performance in the class and let me be the judge.
OK, so people sometimes don't email me because they don't consider their situation like, you know, a valid.
For exchange, let me be the judge of that, OK, but ask the worst thing I can say.
OK, so for example, sometimes some people say, well, I broke up my girlfriend or boyfriend.
Today is not the best day for me to work on the class because emotionally you're in turmoil.
OK, but some people think that's not a valid excuse.
Please do not break with your boyfriend or girlfriend like  times in the semester because then you're abusing.
Is that OK? So if I see that you're breaking up many times in the semester,
I'm going to meet with the two of you and we're going to have counseling, OK, because you have a bad relationship.
OK, the clear is like someone's grandparents, they die like three times or four times in the semester, OK, eight times is going to count them.
OK, now the class schedule is supposed to be on the class web page.
So that's where you will see when when I would post projects, I would also make a note piazza except dates are here.
OK, so pretty much this is set.
So this is this calaboose, OK? We are the clips are going to talk about clips a little bit more later on,
so make sure that the version of the clips that you use is the one that I'm referring that link is should not matter
which clips we use for the clips is really finicky and sometimes we behave weird when you're using a different version.
So I don't want that kind of problems. I want you to use the same clips on the same.
You have a version that I'm using. If the code works for me, you got to work for you.
So let's get rid of the possibilities, OK, of software that may get in the way.
You can have multiple versions of the clips.
You don't have to remove the one that you have, but just make sure that you install the ones that we're referring.
OK, in these questions so far, I mean, how would we get my people in the back?
How are you doing? Very good. If you have questions to ask, don't be shy about this.
OK, so regarding programing assignments, I will let you know information about this,
I'm not going to overwhelm you with what's the summit server released this academic integrity.
Let's just wait until the first project is out and then we begin to talk about
those things so that you don't feel overwhelmed by the amount of information.
Something that I would like to call your attention in the syllabus is the percentages of the different class components.
So the final exam is twenty six percent. What does that mean? That you can go into the final knowing that you're passing the class.
So please, let's work towards that. Let's work very hard through semesters.
You go into the final and you can tell yourself, even if I fail the final, I will be able to past OK,
and maybe you're so relaxed by that, but you actually do really great in the final.
So the point is that unlike other courses. Where the final percentage could be thirty five percent if you fail, the final is really messes you up.
OK, that's not the case here. Capitalize on that. OK, I do not have extra credit at the end of the semester.
Students, students, the. Is there something I can redo? Do you have extra credit?
Can I wash your car. All the sort of things. OK. I don't.
OK. And so the students are pulling one from a grade that they want.
You got to do the fight from the beginning, OK, so that you go into the final sort of confidence on the grade that you're going to get.
OK, so something I always like to do is to give you one or two minutes so that you can introduce, you know, yourself to your peers if you want to.
You don't have to. You prefer to keep texting. That's absolutely fine.
But I think that people that you meet in college, these are friends forever.
And many of you are going to go places I have for my students that they go to Microsoft,
Google, they're making so much money, much more money than me.
Not that money. Money's everything OK? But they're going places. They're senior software.
Something, something OK. And they call me, hey, how you doing, loser?
And they hung up. But that's another story that's not here. There. So the point is that, you know, get to know your classmates.
Also, I encourage you to work together learning the material that we could bring to us when it comes to projects.
I want you to work independently unless I tell you otherwise.
But when it comes to learning eclipse, the material that we cover in class work together.
OK, that's absolutely fine. OK, now, um, I will never test you on Eclipse.
Let me clarify that eclipse is a tool that we use.
OK, now we are going to give you one or two minutes a let me clarify something because a respectfully ladies, you are always cool, OK?
Both guys, you're a little bit slow when it comes to this. Just because a lady smiles at you doesn't mean she likes you.
Is that OK, guys? She's just being friendly. Is that OK, guys? Because I know some of your other B slow here.
OK, on that front. OK, ladies, if any one, these becomes a little bit, you know, like how does something like that stalker let me know.
I'll beat the crap out of them. OK, very good. You got one or two minutes.
Go for it guys, if you want, if you prefer not to text. Guys, I encourage you not to handshake, OK, because remember, we are in a pandemic, OK?
OK, Marquitos Neno, feel free to exchange contact info or something.
It's always good to have people you can, you know, discuss concepts about the class.
Now we use Piazza as a way to communicate and this is your to my tool that we can communicate.
If you have any doubt about anything posted. No, they're OK. I have already posted some information, for example, in the announcements section.
Guys, when I'm lecturing, I'm going to ask you not to talk among yourselves so people around you can listen.
OK, but I'll give you a chance periodically so you can talk about yourself, OK?
But while I'm lecturing, he helps everybody to listen to what I say. So Piazza Announcements is a folder that I used to not use that one.
The same with class info and the all announcements that I posted a message about this.
Just make sure that you check the class announcements periodically in case you have not posted.
You can post you see like new posts. You pick a folder that's just called these test to and then test to to guess there is a conflict with that.
It is. PSA test and then.
And now does it. That's all the critics now feel free to post anything, any question about anything, even if you think is a stupid question.
You don't have to worry about someone making fun of you, because even if you post anonymously, I know who you are.
So the point is that I want you to have the freedom to pose any question, OK,
and if for some reason anybody makes fun of you or call to your question is stupid, I will meet with that person and we will have a problem.
OK, I want you to have that freedom to express or ask anything.
And that is valid in Piazza and is also valid in lecture as well.
OK, very good. Now, one thing I want to tell you is that we're going to be writing, OK, Java code, I assume you know nothing.
OK, some of you may know some Java. Good for you, but I assume you know nothing.
Now, it doesn't mean you're going to go, you know, a little bit fast. That means you have to keep up with me.
And one of the things you will be doing is debugging. So finding problems with your code.
I want you to push yourself to try to find the problems with your code,
but don't be afraid to look for help from the teaching assistants or for my help, OK?
But I want you to try. That's the point I'm trying to make here. I don't want you to basically have a little problem on your code and run to the.
So I want you to develop your developing skills.
And the reason is because one year from now you will have finished one, three and many students have finished one, three, two.
You can do internships. I have four one one one three one one three two students that go into the summer for internships.
When you go to the company, you need to have some basic skills like.
There is no such thing as the company to people could help you a little bit, but they are expecting that you do the rest OK.
The way you acquire those skills is by pushing yourself in your class.
So let's keep that in mind. I'll have more to say about this, because this is very important for me.
I want you to develop those skills. Are you ready address some of these things already, guys?
Anxiety and depression is a common problem. And you could have ordered a personal.
Situations that affect your performance, there is an office here called the AIDS Office that can help you.
So if you have any of these problems, look for help now.
So usually some stool and sometimes wait until the first exam to realize, wow, I really have an anxiety problem here and I don't do well.
Let's not wait until that. If you think that you have such a problem, find out, look for help.
What they usually do is that they provide the time they have facilities.
But the important point is that you are there is anything that can get in the way of your being successful.
Right. Question something, it's good now.
Let's talk about computer organization. OK, now these are some units that you should know about.
Please do not begin to memorize things. What I do when you have a quiz or an exam is that I post a list of the topics you should know and
I post practice material in the form of questions or exams or quizzes so that you get a feel for.
What I'm going to ask is at that moment that you begin to pick and choose whatever you need to memorize.
OK, and I want you to learn more than memorize.
So when it comes to these data units, I think everyone that is in computer science should know the first five.
The other two I Googled because I forget, OK, but the first five you should know.
So just make a note about the. Now, let's talk about software,
two big pieces of software operating system software like Windows or Mac OS and then
applications programs that rely on the support of the operating system provides.
So games where processors, the promise that you will right here, those are applications and we're going to be focusing on those.
So we're going to rely on the operating system to provide support for us.
And that's all I have to say about this. How are we doing the pace?
OK. Am I going too fast? Good. OK.
My people in the back. How are you doing? Are you OK? Good. I know you're over there, but you are not forgotten.
This is a difficult time to teach guys. And some of you have a class after this one.
How many of you are such victims? My heart goes out to you.
That's the only thing that goes out. The rest of my body goes home. Now, I know it's painful, OK, but eat something healthy is OK.
Guys, don't wait for dinner after your second class, otherwise you will not absorb the material anyway.
So compilers, guys, let's talk about tools that we're going to use.
So what is a compiler? A compiler is a tool that translates from one program that is written in something that
looks like English to a set of zeros and ones is similar to what Google Translate does.
Google Translate text, text in one language and give you the equivalent in another.
That's what a compiler is. But in our case, can you hear me?
Because I have a problem with the mic. Can you hear me OK? Let me know if that's not the case, ok.
A little low for a in the case of one theory one,
we're going to use the compiler that translates from Java to something called byte code in some languages like C,
the compiler translate from high level language,
something that looks like English to machine code zeros and ones that the computer actually can directly execute.
That's not going to be our case. In our case.
The compiler translate to something that is a set of citizen ones called bytecode that can execute the right code,
something called the Java vehicle machine. When you install Java in your computer, what you are installing, among other things,
is something called the Java Virtual Machine is just like a computer if a computer that executes the code that the compiler generated.
So if I compile code in a PC, I should be able to take that Java code and move it to another computer like a Mac and Java machine.
There I should be able to run the code that was compile. So that's what you install.
You install this virtual machine that execute code for you.
So that's what it is, so I need you to be able to tell me if I were to ask you what a compiler is.
So I don't expect you to memorize. I want you to tell the compiler in Java takes Java and produces bytecode.
OK, good. Excellent. That's what I want. OK, something that shows that you know.
Yes. So. It depends the computer can do different translations.
OK, for example, in Java, it translate to a set of zeros and ones that is by code.
But because you cannot directly run in the machine, you need that other program that we call the virtual machine in order to run the code.
That's why I gave the example of Google Translate,
because it's a compiler he says are going to take you going to take something in one language and convert it to another.
I was doing one minute, guys, this is what's going to you're going to do you're going to try to discuss this topic of what is like with your friend.
What should you say to your new friends around you if they're texting or doing something not not class related?
Well, you will tell them. What should you tell them?
Uh. What, what, what?
Put the phone down. Who was that? OK, good, thank you.
I'm trying to learn your names, guys, because what we do here, you know, is boring.
It wasn't it. Josh got, uh, John.
OK, John. So, guys, you know what? You're going to tell the person you're going to say thank you.
Thank you for lowering the curve and encourage them to waste more time.
Is that OK, guys? So when you see someone doing that, say thank you for lowering the curve, it sends a message.
OK, one minute to talk about the scope. OK, guys, let's continue.
Questions, questions, a couple of things, logistics, there ain't no lab tomorrow, you know that.
And Tuesdays you need no lab tomorrow.
I'm still setting the thing, but the first lab will be on Thursday.
OK, so no lab tomorrow. I already posted this, but I want to emphasize that, yes, it's basically like this.
But usually what the does is Cobus additional material or it reviews concepts with you or it ask you to do some work.
You can work with others. So that's what it is not necessarily more like.
Yes, I saw an email that you posted office hours on Thursday, they're going to be like that every week.
No, no, no. What I meant by that is I'm working right now on setting office hours.
So we have like over  days. I need to set the schedule once the schedule is set alight, you know?
OK. In the meantime, if you have any questions, post them in Piazza and we're periodically checking.
OK. Not a problem. Agent, I'm sorry I didn't learn your name, but Aiden, Aiden and the lady over there.
Your name. David, David, David, DVOA.
Devon. OK, John, we don't have around , no lap, no human should approach a room to get Jabor instruction.
I'm not making fun of you. Is that OK? Yeah. Yeah. It's just that I get bored.
So I of I do it. If it bothers any of you guys, let me know.
No, no problem. Right now. Seriously, nobody can not know just the guys we get bored teaching.
So but I'm just. I'm glad that you ask.
I like that. I don't care if I have to repeat something three thousand times.
That's what they pay me for. That's why I'm here. That's why you're here.
So please feel free to us. Now we have a compiler, but guess what?
We also have something called an interpreter. And you say my friends with me, plus an interpreter.
So what is an interpreter in? In an interpreter, each instruction is looked at and executed.
Let me give you an example. Let's suppose I have a JavaScript JavaScript language that can be interpreted.
So let's suppose half of the code is correct and half of the code is incorrect.
The first half is correct in JavaScript. So in JavaScript, the interpreter will begin to execute and generate results with the correct code.
And when he finds the code that is messed up, he will stop, you will say at this point.
So it looks at a statement, executes and produce result.
If you take all of that and you were to use a compiler, you will get nothing, because before you can see results, you need to compile everything.
You need to translate everything. And because there is something that is not correct, you will never get a translation of it.
An example of something that is an interpreter is a debugger that is a tool called the debugger that I will talk later on.
That is an interpreter goes line by line processing code.
Let me give you one minute so you can talk to each other, OK, and discuss what an interpreter is.
Go for it, guys. And gentlemen.
No, you're good. Don't worry about it. OK, guys, questions make good now, guys, a long time ago in a galaxy far, far away,
when I begin to to to learn programing, uh, well, that was even before that.
But in college, like 1987, I was learning to Provencio the way in which we used to write code words by having multiple windows open.
And then in one code, in one window, we used to type the code.
In another one we used to compile in an in a third one we saw the result of running the program.
But nowadays we have these programs to like Eclipse, where you can do everything in one place.
Now I want you to use Eclipse, the same version that that I'm using that I referred to in the links that has been posted.
Some of you may use other IDs, but there is several advantages to use eclipse.
One is that the submission process will be easier because we have some sort of plugin that allows submissions.
Also, when I give you a project, when I say the project is posted,
the code distribution that I provide assumes that you're going to report that in eclipse.
So let's stick with that. OK. Now, what I would like to do now is to go over some of the fundamentals of eclipse,
this information is already on the eclipse tutorial that I posted, but I'm just going to give you what you need.
That's it. And now going to test you on Eclipse. You don't need to become experts to.
What I like to do is that along the semester, I keep providing information about Eclipse.
So here's Eclipse. This is what you will see when you start Eclipse.
OK, now how do you write a program?
Let's just go with that.
So the first thing that you need in order to write a program is to create something called a project, OK, which is just a big folder.
So I'm going to call it anything. In one class, we stick to another chocolate dinosaur.
Just give me a topic so that we can engage and make this a little bit more interesting.
Any topic, any name, what?
What did he say? What did he say? What what is that?
What did he say? Is that OK?
OK, guys, another thing. Now what. OK, I see there's no ok.
So guys, no one. Yes, my son. What unicorn favorite dog?
What is that? UNICOR Fihri dug up.
Dot, dot, dot, dot, dot, the U.S., the U.
S s. things like that.
Yeah, yeah. What is that exactly.
What about the. I'm going to Google this after I leave, if this happens to be like a bad website, I'll literally examine it.
Now, after you say create guys, this is important. After you finish, I need you to say don't create.
We do not use module's in this class. OK, one more time, guys, so that there is no confusion about this.
So I'm sorry. Let me destroy the the the unicorn.
So the lead. Let me go one more time file new project unicorn fairy dust.
When you say finish, do not ask for create, you will say don't like,
don't do drugs and now you have a project and that's where we're going to create a program.
How do we create a program? Well, you press that source, which is just a folder, and then in order to create a program, we need to create a file.
And in Java, in order to create a file in Java in Eclipse, in order to create a file, we create a class.
And you say, what is a class? We're going to spend time on them for now are going to press on this, see?
And they are going to pick a name, are going to pick it now, because you're picking things that are confusing me, a, uh.
Is that you again, you big on things?
I don't like it. No, thank you. If not now, that's OK.
That's OK. What's your name up? Artie.
Artie. Archie.
Archie. OK, actually, do you mind if I use your name? All right.
Now look at these guys all like a for example, guys, if you have done Python,
Python is very friendly where you don't need to put a lot of stuff in order to get something out.
Java lacks that. OK, although there is something called the Jakiel, but let's not go there.
The point is that you're going to do the guys with me. Please wait until lecturing.
Don't talk about yourself because people are trying to listen. OK, so I want you to press this.
This is public so that he will create the skeleton that we need for this.
And then I'll do finish Bourla. Now we have this program.
There is a lot of stuff here we're going to talk about for now in this area is where I
can put OK a statement that can be executed and we're just going to output a message.
And once again, I'll go about all the details of this little for now.
If we want to print the message, we're going to write this.
And then in double quotes, the message and usually with people like to do is to say hello world.
I don't like that, OK? I don't know. I don't want to write. I actually switch it to good bye world.
But people were getting a little bit depressed about that. Is that OK?
And I was pushing people over the edge, so that was terminated.
So we are going to put here. When when I thought the last time life in March ,
Is there something new that you guys are using? And what do you mean what's crazy?
That's great. That's a phrase. That's all you say. Is that new?
That's crazy, guys. Is that new?
Everybody, that's crazy. That's crazy.
Like that. OK, ok, guys.
Are you guys OK, you guys OK? No, no, no, you're good.
I just want to make you look very excited. I want to see now, guys, how do we run the program?
This is how we do. Ron Ron as a job application.
When you do that wrong, run as the application that will allow you to run the program and now.
You will see the result down below here, you see that's crazy.
One more time, Ron Ron, as job application, and now you will see that he says that's crazy.
Let me give you a minute so you can try this or talk to your friend or tell them that's crazy.
OK, that's crazy. OK, go ahead.
Let me when we come back, we'll address that question. OK. I believe there is nothing imminent.
OK. OK, guys, now a couple of things, there are many things you can do with the cliffs, different ways to do what I just did.
I'm not going to try to give you all those ways because I don't want to confuse you.
Does the answer to your question. OK, so you can actually click on a file and press the play button and it will run the program.
But I want to make sure that you know about the other one that but I don't want to give you more info of what is needed.
You had a question right now.
Is the same there, the same the different ways in which you can do the same thing.
But when you choose wrong, Ron, as you can, you will be able, for example, later on to see that we can also run the application as debuggers.
And I just wanted to introduce you to that one. OK, also.
Yeah, let's just leave it at. Questions, guys, we get now.
So another thing that we want to do, so this allows us to write a program and to run it,
one of the things that I'll be doing and hopefully on Wednesday, I will be posting examples, OK, class examples in the form of zip files.
So. Let me see if I have it here, really? Yeah, oh, but I have one that I can import.
So guys with me, please. So let's suppose that I downloaded a file.
This file is not available on the class page is something that I downloaded from my computer.
And this is a zip file. So what I will do before class is that in the schedule section.
I will post not only the PDF that represents the slides, but also a zip file that has code examples that I am planning to present.
So what I'm about to do now is to show you how you can take that zip file and imported to eclipse.
That's what I'm going to show you, the tutorial that I have showed you that shows you how to do this, OK?
You can do it. The story provides information.
So let's do that. So I go here. And in order to bring that example into Eclipse, I will say five.
Import, which makes sense, and now this is the part that gets a little bit messy, you will see General Gaete, blah, blah, blah, when I expand.
General, what makes sense to me is to use the first choice, the says file, but that's the wrong one.
The right choice is the second one, existing projects into workspace.
And that's the confusion that I'm trying to explain.
So you don't run into this problem. Then I say next, usually you have these selected, OK, because I run this example before it's not selected.
So you need to select the second choice and then you browse for it.
OK, you look for it. Let me do it one more time in case that you us, I want to import an example.
I will do a zip file with examples. I will do file input, then I will expand the general and then I will not.
On the first one. On the second choice. Then I will do next.
This is usually the ditch. The option though is selected. You will select the second one.
Do browse, look for the zip file that you like to import.
Selected the open click finish and you will see that he has been.
Try it one more time, sure. So we go back, are going to actually raise it so you can see the result, guys ask all of mine at all.
They pay me for this, OK? And I mean it seriously, OK? You're not doing me a favor.
You're paying for this, ok? OK, no, no, I'm serious about that, ok.
I come to, you know, to do this. Of course if I get the lottery today would I be here Wednesday.
What I guess, you guys, you must have had some sort of position, yes or no?
Yeah, of course, guys, of course I'll be here to gloat and then I'll get out now.
There's now one more time import.
I go to general, OK, I see like existing project into workspace, then this will be the option, OK, that you will see selected,
you select the second one, you do browse, pick the file the zip, file the finish and you're done one minute and one yourself go.
OK, remember that the example that I used, you don't have I would post files, you know, but, uh, for the next election.
Now, another thing that I want to talk about, guys, the concept of a perspective.
So you say what is the perspective is basically a way in which you can look at your files and in a way where you can get additional functionality.
The best way to illustrate this is with an example. So right now, I'm working on the Archie project, OK?
And then there is a bug. So I would like to run the dishwasher.
You don't need to worry about this. I just want to use the debugger as an example of how I can switch to a perspective.
So if I want to debug this code, I need the developer. How can I reach the debugger by switching to the debug perspective?
How can I do that window? Perspective of perspective, and then you pick debug and now you're saying files are there, but now they look changes.
Guys with me, please. So I can see now all these options that are related to the vogueing, I can still see my files, but how he looks change.
And then there is another perspective for CBS, OK?
And it's just basically the way we can reach different functionality, Darcel.
Now, how can I go back to the perspective that I had? Window perspective, open perspective, Java.
That's the perspective that we use when we develop code one more time, window perspective, open perspective, debug to change to that perspective,
if I want to go back to the job perspective, perspective and perspective, Java, and then I'm here one minute so you can talk among yourselves.
You can look at your friend and you can say you look like a debug perspective. You look like a job perspective.
You look like that's crazy perspective. That's crazy, but crazy.
I don't know how you use it, but I'm going to try to use it. But with.
OK, guys, let's continue questions, guys. Now, something that could happen to you is the following a by mistake you can close.
You're working on the, you know, the job perspective, your writing code by mistake.
You can close some of these panes or you can have a sibling that, you know,
you left the computer unattended and the sibling comes and blah after you put your sibling.
In orbit around the moon, you want to bring back Eclipse to the you know, the perspective to the way it was.
So how can you do that? By doing window perspective, reset perspective.
And that book will bring back all the pains that we have.
OK, so window perspective open.
Excuse me. Reset perspective window. Now, a concept that I would like to explain is has to do with workspaces, honestly,
you don't have to worry much about this because you will be working on the same workspace throughout the semester.
But let's suppose that you are taking this class and you're still taking another class that also relies on eclipse you will not like to miss.
Mix the files from one class on the other so you can have another perspective, another workspace.
So, for example, for this class, for my classes this semester, I have two to work spaces,
the workspace for one three one and their workspace for one three three.
So when I switch to another workspace, all these files that we were working will not be pressed and they will be like a new directorate that I have.
So if you continue taking classes the next semester, you are taking a one, three, two.
You should create a new workspace for one three two. So that files for one three one are not mixed with files for one three.
This is just a big folder. OK, I wanted to mention that because.
Is those concepts associated with the clips that are important, I mean, get those questions.
We're good. Very good. Now.
We done all of this awesome.
OK, now let's then begin to talk about now AJALA Before I do that, I want to call your attention to this set of notes that are here.
So if you click on that link, you will see a set of notes.
These notes were created by a former student that actually became Attia after he basically transcribed
everything that I did in a lecture that was in materials and he formatted nicely and things like that.
The material is basically similar to what I will be doing this semester.
So you're more than welcome to read that because he's my class that has been transcribed.
In addition, in case that you need a textbook, I believe that with the examples.
Oh, I'm sorry. What is this OK with the examples that I provide on the lecture slides,
you'll be able to to complete projects in case that you have a need for a textbook.
If you go to the class website where he says other resources,
other you will see here two references to online textbooks and nothing, you need to read them.
I'm just telling you, in case that you would like to read. So that give you additional information.
Also, the reference to the notes of these students can be found here.
They they're called the full 2090 notes. So in trying to provide to us as many resources as possible, lectures are recorded.
You have those notes. OK. And they should be able to help these guys, how we doing?
One minute, and when you're surfing, as you would like to talk to your friend, what is the deal with the notes?
OK, guys, let's continue now. So let's talk about Java.
So Java was developed in the 90s like a one of the features of Java is that you can create programs that are portable.
So if you compile something in one machine, you should be able to running another machine with our problems, because in order to run your program,
you need something called the Java Virtual Machine that is just a program that can execute the result of compiling Java code.
The result of compiling Java code is bytecode. So this diagram illustrates what I'm referring to.
So files or somebody was hungry. I can hear that here.
Yeah, it was like, OK.
That's OK, I understand, so source code guy's files that have Java code have the extension, the Java, you don't see that here in Eclipse.
You see you only see, for example, the name for O because I mean, in a different workspace.
But you see. Well, you see the extension.
I'm sorry. I thought you didn't. OK, so you see the files that are Java files have the Java extension.
OK, so the compiler, when he looks at those files, the result of the compilation is a file that has the same base name.
For example, if I have the file archi the Java, the result of compiling that file will be archi dot class.
That's the name of the father as the bytecode. OK, and that's the file that then a Java virtual machine.
That's what the JVM here represents will be able to execute for you.
And the JVM could be even for a Mac, even for a PC or even for a Linux environment and things of the questions about that.
Do you need a minute to talk that with your friend or are we good guys? Good.
Very good. Don't worry, guys.  more weeks. OK, guys, now.
Let's go over some concepts about the first one is the concept of an object,
so an object is an entity that has values and operations and object is an entity that has values and operations.
Now, what is a class? A class is a recipe, is a blueprint out of which we can create objects, for example.
Do you like cheesecake? It is very heavy on calories, are you eating ice while you don't care about that because you're a young.
Enjoy a class is like a recipe for cheesecake.
There is only one recipe for one particular kind of cheesecake out of that recipe.
How many cheesecake can I have? As many as I want, but there is only one recipe in the same way we have a class.
A class is unique, like a class for a student. Out of that definition, I can create many objects.
There are soothing objects.
Why don't we take a minute and something that can give you one if you don't want to, but something could be that you exchange roles and say,
let me explain to you what we just said about object and class, and then you reverse the role, because when you teach, you learn.
Because he puts in question your knowledge, go one minute if you want if you prefer not to.
That's your call is your future, not mine. That was about.
I think. OK, get those questions, guys.
Those concepts are very important. OK, I want you to feel comfortable with what is an object of what is a class.
We write a class and then out of that class, we'll be able to create many objects.
OK, now let's define a method.
A method is basically something that represents a task.
For example, earlier we use something called C around the Green Line.
That's a method, a milquetoast. When you are in class, except for me, you should be wearing a mask.
OK, because we need to keep OK, I can do it because I'm away from you, OK?
And there will be difficult you just for your own help. OK, so this just represents a task.
So you can have admitted the data. You can have a method to compute the square root.
You can have a method that computes the maximum of two values.
That's what it meant to this. Names that are used for a method are called procedural subroutine.
But in Java we use the term. A method, OK?
And then instead of a metal, we can have a lot of stuff and I'm going to bore you with that now.
Let's now begin to talk about those parts. OK, so when I wrote the Archie program, I'm sorry, I don't mean to keep using the name.
Let me pick some. What's your name? Any of you guys. Arthur.
OK, so I'm going to create a program called Arthur, so I go new, I create a project.
OK, so let's call Arch Arthur like Archie because the central were.
Are you from the same high school? I'm sorry, you're trying to get rid of these people that you never see them and they chose to come here.
Now, ladies, what's your name? Any any of you guys give me a name, any name?
Fake ID do not have to give me a real name to protect your identity, huh?
Hayley Kelly. Clearly like that.
OK, so Kelly Kelly's project. OK, and then we do finish and then we say don't create and now are going to create a program.
And this is the part they now talk about the components of the program.
So when I create a program are going to say, see, Kelly, give me a name of anything you like.
Who are you? Star, OK, so Astar, we're going to create a class called Star Guys, a class is a recipe.
If I don't see like this, this is what you will have.
You have an empty shell. This is probably class estar.
This is the beginning of the class. This is the end. Instead of a class, we can put things,
you will see that we can put variables and we can put methods in order to be able to execute, to run the program.
We need to have a method. OK, which method.
A special method. Komin So my friends, please guys, because some people are trying to listen is hard if you're talking on the back.
OK, thank you. So the method is called public static void main.
All of these I can type fast because I've done it so many times in my life.
OK, what is all of that. The only thing that, you know, Nelson says I need it does it is like two pieces of bread that you need for the sandwich.
This is a method. This is where it started. This is where it ends. Those are curly brackets in case you cannot see them clearly, OK?
And for the time being, we're going to focus on what goes inside of this metal, what I wrote manually, Eclipse can write for you so I can now.
OK, if I were to doing this, I know it could be boring, but emphasizing what we have done.
So there's no question I'm going to create another project. And you and I.
Arthur, right, Arthur. I don't want you to feel left out.
Is that OK? That's not fair. Artus project. OK, art or something that you like.
Arthur, anything that you like. Apples, apples.
That's fair. So we're going to create a class apple this time instead of me having to tie public bla bla bla bla bla bla bla bla bla.
I will just click this little box and now that will be created for me.
As you can see, probably Class Apple now has this amigos one minute them one yourself.
Look at each other and say, do you have a friend that is from the same school in this class.
Go. OK, guys, questions, questions, guys questions.
We get now let's begin to put things inside, the first thing that we want to talk about,
our variables, variables are just boxes like Marable's in math.
OK, so we're going to. Right, OK here, for example, number of apples, OK?
And we're going to say the number of apples is . Actually, let me do this in a very orderly way.
What is this? This is the declaration of a variable of a box and is going to be of type integer there.
Different kind of variables in the same way that you have different kind of containers,
a container for milk, a container for gas, a container for water.
You have different kind of variables.
The kind of content that the variable can hold is represented by these symbol symbols that you see here in purple are reserved words of the language.
They have a special meaning. So I define a box.
What is the value of the box? It has nothing. How can I put something into the variable by using an assignment so I can say the number of apples.
How many apples? You one after . That initializes that puts the value in that variable, how can I see the value of the variable?
I can you see Stender outdoor of line system, the other green line is a method.
Who wrote it for you? The Java people. How can I use it?
Well, I can just put the name of the variable and then when I run this program, I will see the value.
So if I now run the program Apple Ron Ron as Java application you will see the value ten
below one minute and get yourself to talk to your friends about this is a variable.
This is what Nielsen did. Are there any questions? If there are no questions.
Great. If not, you can address the. OK, guys, questions, guys, questions, how are we doing now?
Something that we can do is the following. Instead of looking at the value , we cannot deliver a message, OK?
Before it, we can say the number number of apples is now if you just write that.
You see, a, this is not valid. How can you glue a paint, concatenate the message by using it plus.
OK, so you can put that together.
Thank you, guys. I just taking this little by little. Some of you have seen it, but thank you, though.
So now I'm able to see the output and let's leave things nicely, OK?
Oh, everything is nicely. If I double click again on the file, I can see everything and then I can see like Apple.
I run it and you can see a number of apples is .
And I not the message after, if I want to, you can do plus, plus, plus in order to glue things together.
So if I do see standard out the train line, Mary plus land, you will get Marilyn, OK.
Notice that when you use train line, everything appears on a line.
So when I run this code, Maryland will appear on the first line and on the second line you will see the number of apples.
There's no space added in between. If you like to have a space, you need to add it yourself.
So here I added this space and now you can see Merryland.
Let me go with a good. Very good.
So integers are one type of variable that we're going to see.
Another type of variable that we're going to see is something that is similar to the real numbers.
And he's called a double so I can define a variable that represents the price of an apple.
Is that OK? A somebody else so that everybody participate.
Give me a price of an apple. OK, lady, go ahead.
Are you buying organic? I guess you're buying organic food if you're buying organic food, organic food is a little bit more expensive.
Is that OK? So the price of an apple is going to be twelve fifty now.
That's a very healthy apple, guys.
So what kind of operations can we perform?
One of the operations is that all these multi mathematical operations you're familiar with can be performed.
So I can define another variable called total. And then I can add here the computation of what will be the cost.
Both. Buying  apples.
And now I can put here. Total is.
Total. And then when I run this, you will see that he will tell me this is how much you have to pay for apples.
Let me give you a minute so you can look at this and talk to your friends about one minute, guys.
Like that apple exempt. I don't know, want.
The. OK, guys, questions, guys, questions.
OK, one more. I know you're tired, but bear with me, OK? There is another kind.
Yes. A Josh, uh, David, Aiden.
Aiden. OK, Mike. What? I'm sorry.
What's your name? This guy. Double means is a real number is the equivalent of real a fractional part,
an integer does have a fractional part, so an integer and is a whole amount in natural number.
Guys, questions. Now, we can also define extreme variable.
OK, so we're going to define the kind of apple, is that OK?
So the and you study the apple, then the price.
What kind of apple do you like? Green.
I'm sorry, that was not correct. I should respect other people's opinions.
OK, no, that's not right. Green we're kidding, guys.
Nobody feel offended. Is that OK? And just because this is boring, OK, so.
No, no, no, no, please. If you are, I will apologize and, you know, clean your car or whatever now so I can define a variable as a string variable.
So I can put a message, I can put anything, and then I can also put that,
I can now say they taught sister in law the Green Line and I can see the type of people we sell is and I can put kind.
And then when you run this, you will see that you will say the type of apple we sell is green, which is a green.
Oh yeah. Because you like green not. OK, thank you.
That threw me off. How you doing, guys? Now I know you're exhausted now, so let me just do a couple of things.
Yes, quite. No.
OK, a string string, yeah, yeah, a string is a type is a class.
OK, that was defined for us and then I define a variable kind that will have a string.
Yes, Archie, Archie, another.
We can talk about that later on. For now, I don't want to confuse people, but if they're the same green, if I were to say green tea to equals green,
they it is very smart and you can optimize and he will just allocate the green in only one area and the two variables will point to the same one.
One more thing I know I still have one may not put football on top of football when I'm on a monitor.
Look at this. Look at how nice it clips.
OK, so let's suppose that, you know, you're very you know, you're having a bad day and you're indentation, OK, less socks in French.
OK, literally a hole in the ozone hole in the buggy, boogie woogie and then boogie, boogie, boogie, boogie and please guys.
Not no, not as bad.  Bunga, bunga, bunga, bunga, bunga. OK, you say body works, but you will lose points because this is not well intended.
So what you will do is that you will say sors, you will say a deed, select all source, correct notation. 
And now look what a beautiful. That's crazy. 
That's crazy. OK, guys, get out.
